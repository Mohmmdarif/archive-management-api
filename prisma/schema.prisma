// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output        = "../src/prisma/client"
  // binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// USER MANAGE
model Jenis_Kelamin {
  id            Int      @id @default(autoincrement())
  jenis_kelamin String   @unique
  created_at    DateTime @default(now())
  updated_at    DateTime @default(now())

  users User[]
}

model User {
  id               String        @id @default(cuid())
  nip              String        @unique
  gambar_profil    String?
  id_jenis_kelamin Int
  jenis_kelamin    Jenis_Kelamin @relation(fields: [id_jenis_kelamin], references: [id])
  nama_lengkap     String
  email            String        @unique
  password         String
  role_id          Int
  role             Role          @relation(fields: [role_id], references: [id])
  jabatan          String?
  no_telp          String?
  status_aktif     Boolean       @default(true)
  created_at       DateTime      @default(now())
  updated_at       DateTime      @default(now())

  Surat_Masuk        Surat_Masuk[]
  disposisi_pengaju  Disposisi[]   @relation("Disposisi_pengaju")
  disposisi_penerima Disposisi[]   @relation("Disposisi_penerima")
}

model Role {
  id         Int      @id @default(autoincrement())
  nama_role  String   @unique
  created_at DateTime @default(now())
  updated_at DateTime @default(now())

  users User[]
}

// SURAT MANAGE

model Type_Surat {
  id        Int    @id @default(autoincrement())
  nama_type String

  Surat Surat[]
}

model Kriteria_Surat {
  id            Int      @id @default(autoincrement())
  nama_kriteria String
  keterangan    String
  created_at    DateTime @default(now())
  updated_at    DateTime @default(now())

  Surat Surat[]
}

model Jenis_Surat {
  id         Int      @id @default(autoincrement())
  nama_jenis String
  keterangan String
  created_at DateTime @default(now())
  updated_at DateTime @default(now())

  Surat Surat[]
}

model Kategori_Surat {
  id            Int      @id @default(autoincrement())
  nama_kategori String
  keterangan    String
  created_at    DateTime @default(now())
  updated_at    DateTime @default(now())

  Surat_Masuk Surat_Masuk[]
}

model Surat {
  id                String         @id @default(cuid())
  no_surat          String
  id_type_surat     Int
  type_surat        Type_Surat     @relation(fields: [id_type_surat], references: [id])
  perihal_surat     String
  tanggal_surat     DateTime
  id_jenis_surat    Int
  jenis_surat       Jenis_Surat    @relation(fields: [id_jenis_surat], references: [id])
  id_kriteria_surat Int
  kriteria_surat    Kriteria_Surat @relation(fields: [id_kriteria_surat], references: [id])
  pengirim_surat    String
  penerima_surat    String
  status_surat      Boolean        @default(false)
  pengarsip         String
  filename          String
  path_file         String
  created_at        DateTime       @default(now())
  updated_at        DateTime       @default(now())

  surat_keluar Surat_Keluar[]

  Surat_Masuk Surat_Masuk[]
}

model Surat_Keluar {
  id            String   @id @default(cuid())
  id_surat      String   @unique
  surat         Surat    @relation(fields: [id_surat], references: [id])
  tanggal_kirim DateTime
  created_at    DateTime @default(now())
  updated_at    DateTime @default(now())
}

model Surat_Masuk {
  id                      String           @id @default(cuid())
  id_surat                String           @unique
  surat                   Surat            @relation(fields: [id_surat], references: [id])
  no_agenda               Int
  id_kategori_surat       Int
  kategori_surat          Kategori_Surat   @relation(fields: [id_kategori_surat], references: [id])
  jumlah_lampiran         Int
  id_user_disposisi       String?
  user_disposisi          User?            @relation(fields: [id_user_disposisi], references: [id])
  tanggal_terima          DateTime
  id_status_disposisi     Int
  status_disposisi        Status_Disposisi @relation(fields: [id_status_disposisi], references: [id])
  tanggal_ajuan_disposisi DateTime         @default(now())
  keterangan              String
  created_at              DateTime         @default(now())
  updated_at              DateTime         @default(now())

  disposisi Disposisi[]
}

model Disposisi {
  id                  String           @id @default(cuid())
  id_surat_masuk      String
  surat_masuk         Surat_Masuk      @relation(fields: [id_surat_masuk], references: [id])
  id_pengaju          String
  pengaju             User             @relation(name: "Disposisi_pengaju", fields: [id_pengaju], references: [id])
  id_penerima         String
  penerima            User             @relation(name: "Disposisi_penerima", fields: [id_penerima], references: [id])
  pesan_disposisi     String
  id_status_disposisi Int
  status_disposisi    Status_Disposisi @relation(fields: [id_status_disposisi], references: [id])
  tanggal_disposisi   DateTime         @default(now())
  created_at          DateTime         @default(now())
  updated_at          DateTime         @default(now())

  parent_disposisi_id String?
  parent_disposisi    Disposisi?  @relation("ParentDisposisi", fields: [parent_disposisi_id], references: [id])
  child_disposisi     Disposisi[] @relation("ParentDisposisi")
}

model Status_Disposisi {
  id          Int      @id @default(autoincrement())
  nama_status String
  created_at  DateTime @default(now())
  updated_at  DateTime @default(now())

  Surat_Masuk Surat_Masuk[]
  Disposisi   Disposisi[]
}
